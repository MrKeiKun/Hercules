name: CI/CD Pipeline

on: 
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

# Global environment variables
env:
  MYSQL_DATABASE: 'ragnarok'
  MYSQL_USER: 'ragnarok'
  MYSQL_PASSWORD: 'ragnarok'
  MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'

jobs:
  # Pre-flight checks that run first
  preflight:
    name: Pre-flight Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for merge conflicts
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            git fetch origin ${{ github.base_ref }}
            git merge-tree $(git merge-base HEAD origin/${{ github.base_ref }}) HEAD origin/${{ github.base_ref }} || exit 1
          fi

      - name: Validate PR title (if PR)
        if: github.event_name == 'pull_request'
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            test
            chore
            ci
            build
            perf
            revert

  # Code quality and security checks
  code-quality:
    name: Code Quality & Security
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: preflight
    if: ${{ !failure() && !cancelled() }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: CodeQL Analysis
            workflow: codeql-analysis.yml
          - name: Tools Validation
            workflow: tools.yml
    uses: ./.github/workflows/${{ matrix.workflow }}

  # Main build matrix
  build-matrix:
    name: Build Matrix
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [preflight, code-quality]
    if: ${{ !failure() && !cancelled() }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: GCC Build
            workflow: build.yml
          - name: GCC Test
            workflow: gcc_test.yml
          - name: Clang Test
            workflow: clang15_test.yml
          - name: GCC Old 1
            workflow: gccold1.yml
          - name: GCC Old 2
            workflow: gccold2.yml
          - name: GCC Snapshot
            workflow: gccsnapshot_test.yml
    uses: ./.github/workflows/${{ matrix.workflow }}

  # Database compatibility tests
  database-tests:
    name: Database Compatibility
    runs-on: ubuntu-latest
    timeout-minutes: 25
    needs: [preflight, code-quality]
    if: ${{ !failure() && !cancelled() }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: MariaDB Test
            workflow: mariadb.yml
          - name: MySQL Test
            workflow: mysql.yml
    uses: ./.github/workflows/${{ matrix.workflow }}

  # Platform-specific builds
  platform-builds:
    name: Platform Builds
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    needs: [preflight, code-quality]
    if: ${{ !failure() && !cancelled() }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            name: macOS Latest
            workflow: macos_latest.yml
          - os: macos-latest
            name: macOS M1
            workflow: macos_m1.yml
          - os: windows-latest
            name: Windows
            workflow: windows.yml
    uses: ./.github/workflows/${{ matrix.workflow }}

  # Post-build tasks (only on master branch)
  post-build:
    name: Post-Build Tasks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [build-matrix, database-tests, platform-builds]
    if: ${{ github.ref == 'refs/heads/master' && !failure() && !cancelled() }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: HWS API Bot
        uses: ./.github/workflows/hwsapibot.yml
        secrets: inherit

      - name: Create Release Summary
        if: github.event_name == 'push'
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ All builds completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "- üîí Security scans passed" >> $GITHUB_STEP_SUMMARY
          echo "- üß™ All tests passed" >> $GITHUB_STEP_SUMMARY
          echo "- üì¶ Ready for release" >> $GITHUB_STEP_SUMMARY

  # Workflow completion notification
  notify:
    name: Notify Completion
    runs-on: ubuntu-latest
    needs: [build-matrix, database-tests, platform-builds, post-build]
    if: always()
    steps:
      - name: Notify on Failure
        if: ${{ failure() }}
        run: |
          echo "‚ùå Workflow failed! Please check the logs for details."
          
      - name: Notify on Success
        if: ${{ success() }}
        run: |
          echo "‚úÖ All checks passed successfully!"
